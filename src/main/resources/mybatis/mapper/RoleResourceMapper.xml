<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.company.smartwater.repository.RoleResourceMapper" >
  <resultMap id="BaseResultMap" type="com.company.smartwater.domain.RoleResource" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="space_code" property="spaceCode" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="updated_date" property="updatedDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, resource_id, space_code, version, created_by, created_date, updated_by, 
    updated_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tbl_role_resource
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectResourcesByRoleIds" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from tbl_role_resource
    where role_id in
    <foreach collection="list" item="ids" open="(" close=")" separator=",">
      #{ids}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tbl_role_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteResourcesByRoleId" parameterType="java.lang.Long" >
    delete from tbl_role_resource
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.company.smartwater.domain.RoleResource" >
    insert into tbl_role_resource (id, role_id, resource_id, 
      space_code, version, created_by, 
      created_date, updated_by, updated_date
      )
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT}, 
      #{spaceCode,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{updatedDate,jdbcType=TIMESTAMP}
      )
  </insert>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into tbl_role_resource (role_id, resource_id,
    space_code, version, created_by,
    created_date, updated_by, updated_date)
    values
     <foreach collection ="list" item="item" index= "index" separator =",">
       (#{item.roleId,jdbcType=BIGINT}, #{item.resourceId,jdbcType=BIGINT},
       #{item.spaceCode,jdbcType=VARCHAR}, 0, #{item.createdBy,jdbcType=VARCHAR},
       #{item.createdDate,jdbcType=TIMESTAMP}, #{item.updatedBy,jdbcType=VARCHAR}, #{item.updatedDate,jdbcType=TIMESTAMP}
       )
     </foreach >
  </insert>
  <insert id="insertSelective" parameterType="com.company.smartwater.domain.RoleResource" >
    insert into tbl_role_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="spaceCode != null" >
        space_code,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="createdDate != null" >
        created_date,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="updatedDate != null" >
        updated_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="spaceCode != null" >
        #{spaceCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedDate != null" >
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.smartwater.domain.RoleResource" >
    update tbl_role_resource
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="spaceCode != null" >
        space_code = #{spaceCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedDate != null" >
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.smartwater.domain.RoleResource" >
    update tbl_role_resource
    set role_id = #{roleId,jdbcType=BIGINT},
      resource_id = #{resourceId,jdbcType=BIGINT},
      space_code = #{spaceCode,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>